METHOD ONE(15.37% 1ms T1)
public class Solution {
    public void rotate(int[] nums, int k) {
        k=k%nums.length;
        int[] tmp=new int[k];
        int j=0;
        int index=0;
        for(int i=nums.length-1;i>=nums.length-k;i--){
            tmp[j++]=nums[i];
            nums[i]=i<k?tmp[index++]:nums[i-k];
        }
        for(int i=nums.length-k-1;i>=0;i--){
            nums[i]=i<k?tmp[index++]:nums[i-k];
        }
    }
}
-----------------------------------------------------------------
public void rotate(int[] nums, int k) {
    k %= nums.length;
    reverse(nums, 0, nums.length - 1);
    reverse(nums, 0, k - 1);
    reverse(nums, k, nums.length - 1);
}

public void reverse(int[] nums, int start, int end) {
    while (start < end) {
        int temp = nums[start];
        nums[start] = nums[end];
        nums[end] = temp;
        start++;
        end--;
    }
}