METHOD¡¡ONE(37.73%)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1==null)return l2;
        if(l2==null)return l1;
        ListNode result=new ListNode(0);
        int rest=l1.val+l2.val;
        int carry=0;
        if(rest>=10){
            carry=1;
            rest=rest-10;
        }
        ListNode tmp=new ListNode(rest);
        result.next=tmp;
        while(true){
            l1=l1.next;
            l2=l2.next;
            if(l1==null||l2==null){
                if(l1==null&&l2==null){
                    if(carry==0){
                        return result.next;
                    }else{
                        tmp.next=new ListNode(1);
                        return result.next;
                    }
                }else{
                    if(l1==null){
                        tmp.next=doRest(l2,carry);
                        return result.next;
                       
                    }else{
                        tmp.next=doRest(l1,carry);
                        return result.next;
                    } 
                } 
               
            }
            rest=l1.val+l2.val+carry;
            carry=0;
            if(rest>=10){
                rest=rest-10;
                carry=1;
            }
            tmp.next=new ListNode(rest);
            tmp=tmp.next;
        }
    }
    public ListNode doRest(ListNode l3, int carry){
        int doCarry=carry;
        ListNode result=l3;
        while(doCarry==1){
            l3.val=l3.val+doCarry;
            doCarry=0;
            if(l3.val>=10){
                l3.val=l3.val-10;
                doCarry=1;
            }
            if(doCarry==1&&l3.next==null){
                l3.next=new ListNode(1);
                break;
            }
            l3=l3.next;
        }
        return result;
    }
}
-------------------------------------------------------------------
METHOD TWO(89.63%)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummyHead = new ListNode(0);
    ListNode p = l1, q = l2, curr = dummyHead;
    int carry = 0;
    while (p != null || q != null) {
        int x = (p != null) ? p.val : 0;
        int y = (q != null) ? q.val : 0;
        int sum = carry + x + y;
        carry = sum / 10;
        curr.next = new ListNode(sum % 10);
        curr = curr.next;
        if (p != null) p = p.next;
        if (q != null) q = q.next;
    }
    if (carry > 0) {
        curr.next = new ListNode(carry);
    }
    return dummyHead.next;
    }
}