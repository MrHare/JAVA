METHOD ONE(3.13% too slow)
public class Solution {
    public String addStrings(String num1, String num2) {
        int len1=num1.length()-1;
        int len2=num2.length()-1;
        int carry=0;
        int tmp=0;
        String result="";
        while(len1>=0||len2>=0){
            int n1=len1>=0?num1.charAt(len1)-48:0;
            int n2=len2>=0?num2.charAt(len2)-48:0;
            len1--;
            len2--;
            tmp=n1+n2+carry;
            result+=tmp%10;//think about the time of append
            carry=tmp/10;
        }
        if(carry>0){
            result+=carry;
        }
        return new StringBuffer(result).reverse().toString();
    }
}
------------------------------------
little change,little promotion
------------------------------------

METHOD ONE(3.13% too slow)
public class Solution {
    public String addStrings(String num1, String num2) {
        int len1=num1.length()-1;
        int len2=num2.length()-1;
        int carry=0;
        int tmp=0;
        String result="";
        while(len1>=0||len2>=0){
            int n1=len1>=0?num1.charAt(len1--)-48:0;
            int n2=len2>=0?num2.charAt(len2--)-48:0;
            tmp=n1+n2+carry;
            result+=tmp%10;//think about the time of append
            carry=tmp/10;
        }
        if(carry>0){
            result+=carry;
        }
        return new StringBuffer(result).reverse().toString();
    }
}