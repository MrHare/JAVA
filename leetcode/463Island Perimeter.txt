METHOD ONE£¨57.06% 150ms£©
public class Solution {
    public int islandPerimeter(int[][] grid) {
        int perimeter=0;
        int height=grid.length;
        if(height==0)return perimeter;
        int width=grid[0].length;
        if(width==0)return perimeter;
        for(int h=0;h<height;h++){
        	for(int w=0;w<width-1;w++){
        		perimeter+=(grid[h][w]+grid[h][w+1])%2;///////////////use operate  ^   may faster
        	}
        	perimeter+=grid[h][0]+grid[h][width-1];
        }
        for(int w=0;w<width;w++){
        	for(int h=0;h<height-1;h++){
        		perimeter+=(grid[h][w]+grid[h+1][w])%2;
        	}
        	perimeter+=grid[0][w]+grid[height-1][w];
        }
        return perimeter;
    }
}
---------------------------------------------------------------------------
METHOD TWO(31.69% 167ms)
public class Solution {
    public int islandPerimeter(int[][] grid) {
        int perimeter=0;
        int height=grid.length;
        if(height==0)return perimeter;
        int width=grid[0].length;
        if(width==0)return perimeter;
        for(int h=-1;h<height;h++){
        	for(int w=-1;w<width;w++){
        		perimeter+=(getN(grid,h,w)+getN(grid,h,w+1))%2+(getN(grid,h,w)+getN(grid,h+1,w))%2;
        	}
        }
        return perimeter;
    }
    public int getN(int[][] grid,int h,int w){
    	if(h<0||h>=grid.length||w<0||w>=grid[0].length)return 0;
    	return grid[h][w];
    }
}
-------------------------------------------------------------------------------
METHOD THREE(43.44% 158ms)
public class Solution {
    public int islandPerimeter(int[][] grid) {
        int perimeter=0;
        int height=grid.length;
        if(height==0)return perimeter;
        int width=grid[0].length;
        if(width==0)return perimeter;
        int[][] nGrid=new int[height+2][width+2];
        for(int h=1;h<=height;h++){
        	for(int w=1;w<=width;w++){
        		nGrid[h][w]=grid[h-1][w-1];
        	}
        }
        for(int h=0;h<=height;h++){
        	for(int w=0;w<=width;w++){
        		perimeter+=(nGrid[h][w]+nGrid[h][w+1])%2+(nGrid[h][w]+nGrid[h+1][w])%2;
        	}
        }
        return perimeter;
    }
}